buildscript {
	repositories {
		mavenCentral()
		// maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
	}
	dependencies {
		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M2'
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'org.junit.platform.gradle.plugin'

jar {
	baseName = 'spring-test-junit5'
	version = '1.0.0-SNAPSHOT'
}

group = 'org.springframework.test'

ext.hamcrestVersion      = '1.3'
ext.jacksonVersion       = '2.7.4'
ext.jsonpathVersion      = '2.2.0'
ext.junitJupiterVersion  = '5.0.0-M2'
ext.junitPlatformVersion = '1.0.0-M2'
ext.log4JVersion         = '2.6.2'
ext.servletApiVersion    = '3.1.0'
ext.springVersion        = '4.3.1.RELEASE'

repositories {
	mavenCentral()
	// maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
	// maven { url 'https://repo.spring.io/libs-snapshot' }
}

dependencies {
	compile("org.springframework:spring-context:${springVersion}")
	compile("org.springframework:spring-test:${springVersion}")
	compile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
	testCompile("org.springframework:spring-webmvc:${springVersion}")
	testCompile("javax.servlet:javax.servlet-api:${servletApiVersion}")
	testCompile("org.hamcrest:hamcrest-core:${hamcrestVersion}")
	testCompile("com.jayway.jsonpath:json-path:${jsonpathVersion}")
	testCompile("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
	testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
	testRuntime("org.apache.logging.log4j:log4j-core:${log4JVersion}")
	testRuntime("org.apache.logging.log4j:log4j-jul:${log4JVersion}")
	testRuntime("org.apache.logging.log4j:log4j-jcl:${log4JVersion}")
	testRuntime("org.apache.logging.log4j:log4j-slf4j-impl:${log4JVersion}")

	// Enable use of the JUnitPlatform Runner within the IDE
	testCompile("org.junit.platform:junit-platform-runner:${junitPlatformVersion}")
}

compileJava {
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
}

compileTestJava {
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	options.compilerArgs += '-parameters'
}

junitPlatform {
	engines.include 'junit-jupiter' // we only want to run JUnit Jupiter tests...
	logManager 'org.apache.logging.log4j.jul.LogManager'
}

javadoc {
	options.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED
	options.author = true
	options.header = project.name
	options.addStringOption('Xdoclint:none', '-quiet')
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

configurations.all {
	// Do NOT cache snapshot JARs for more than 60 seconds.
	resolutionStrategy.cacheChangingModulesFor 60, 'seconds'
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.14.1'
}
